The ``0-add_integer`` module
___________________________


This module defines an integer addition function ``add_integer(a, b=98)``.


Usage
_____


``add_integer(...)``` returns the addition of the two arguments. For numbers,
that value is equivalent to using the ``+`` operator.


    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

    >>> add_integer(2, -3)
    -1

    >>> add_integer(0, 0)
    0


    >>> add_integer(-1.8, 3.5)
    2


    >>> add_integer(-1)
    97


    >>> add_integer()
    Traceback (most recent call last):
	...
    TypeError: add_integer() missing 1 required positional argument: 'a'


    >>> add_integer(0)
    98


    >>> add_integer(1, "abc")
    Traceback (most recent call last):
	...
    TypeError: b must be an integer


    >>> add_integer(float('nan'))
    Traceback (most recent call last):
	...
    ValueError: cannot convert float NaN to integer


    >>> add_integer(float('inf'))
    Traceback (most recent call last):
	...
    OverflowError: cannot convert float infinity to integer


    >>> add_integer("abc", 1)
    Traceback (most recent call last):
	...
    TypeError: a must be an integer
